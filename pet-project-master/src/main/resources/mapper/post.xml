<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">


    <!-- 게시물 추가 -->
    <insert id="insertPost" parameterType="com.project.petproject.dto.Post" useGeneratedKeys="true"
            keyProperty="post_idx">
        INSERT INTO posts (Post_content, posted_at, post_views, post_likes, user_id)
        VALUES (#{Post_content}, now(), #{post_views}, #{post_likes}, #{user_id})
    </insert>

    <insert id="saveFile" parameterType="com.project.petproject.dto.Post_file" useGeneratedKeys="true"
            keyProperty="file_idx">
        insert into post_file(post_idx, file_rname, uploaded_at, storedName)
        VALUES (#{post_idx}, #{file_rname}, now(), #{storedName})
    </insert>

    <!-- 게시물 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM posts WHERE post_idx = #{post_idx}
    </delete>

    <!--작성된 게시물의 내용에서 키워드 검색 -->
    <select id="selectPostByKeyword" resultType="com.project.petproject.dto.Post" parameterType="String">
        SELECT * FROM posts WHERE Post_content LIKE '%' || #{keyword} || '%'
    </select>

    <select id="mainPost" resultMap="postWithFiles">
        SELECT p.user_id, pf.post_idx as post_idx, p.post_content as content, pf.file_rname as file_rname
        FROM post_file pf
        INNER JOIN posts p ON pf.post_idx = p.post_idx
    </select>


    <resultMap id="postWithFiles" type="PostWithFileDTO">
        <id property="post_idx" column="post_idx"/>
        <result property="content" column="content"/>
        <result property="user_id" column="user_id"/>
        <collection property="file_rnames" ofType="String">
            <result column="file_rname"/>
        </collection>
    </resultMap>


    <!-- 게시물 검색 (ID 기준) -->
    <select id="UserPosts" resultMap="postWithFiles">
        SELECT p.user_id, pf.post_idx as post_idx, p.post_content as content, pf.file_rname as file_rname
        FROM post_file pf
        INNER JOIN posts p ON pf.post_idx = p.post_idx
        WHERE p.user_id = #{user_id}
    </select>

    <!--  상세보기 정보  -->
    <select id="Detail"  resultType="com.project.petproject.dto.Post" parameterType="com.project.petproject.dto.Post_file">
        SELECT p.user_id, u.user_nick, p.post_content, pf.file_idx, pf.file_rname, p.posted_at, p.post_idx
        FROM posts p
                 INNER JOIN post_file pf ON pf.post_idx = p.post_idx
                 INNER JOIN users u ON u.user_id = p.user_id
        WHERE p.post_idx = #{post_idx}
    </select>

    <!--  랭크기능 상위 5개 노출  -->
    <select id="rank" resultType="com.project.petproject.dto.Post">
        SELECT p.*, GROUP_CONCAT(pf.file_rname) AS file_rname, u.user_nick, (
            SELECT COUNT(c.cmt_idx)
            FROM comments c
            WHERE c.post_idx = p.post_idx
        ) AS comment_count
        FROM posts p
                 LEFT JOIN users u ON u.user_id = p.user_id
                 LEFT JOIN post_file pf ON pf.post_idx = p.post_idx
        GROUP BY p.post_idx
        ORDER BY comment_count DESC
        LIMIT 5;

    </select>

    <select id="search" parameterType="string" resultType="com.project.petproject.dto.Post">
        SELECT p.*,
               GROUP_CONCAT(pf.file_rname) AS file_rname,
               u.user_nick
        FROM posts p
                 LEFT JOIN users u ON u.user_id = p.user_id
                 LEFT JOIN post_file pf ON pf.post_idx = p.post_idx
        WHERE p.post_content LIKE CONCAT('%', #{searchQuery}, '%')
        GROUP BY p.post_idx
    </select>
</mapper>
